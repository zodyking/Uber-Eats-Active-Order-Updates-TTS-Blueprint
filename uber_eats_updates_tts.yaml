alias: Uber Eats Active Order Updates TTS
description: Announce changes to Uber Eats sensors when an active order is detected
triggers:
  - entity_id:
      - sensor.brandon_uber_eats_order_stage
    trigger: state
    id: order_stage_change
    alias: When Order Stage Changes
  - entity_id:
      - sensor.brandon_uber_eats_driver_name
    trigger: state
    id: driver_name_change
    alias: When Driver Name Changes
  - entity_id:
      - sensor.brandon_uber_eats_driver_eta
    trigger: state
    id: driver_eta_change
    alias: When Driver ETA Chnages
  - entity_id:
      - sensor.brandon_uber_eats_restaurant_name
    trigger: state
    id: restaurant_name_change
    alias: When Restaurant Name Changes
  - entity_id:
      - sensor.brandon_uber_eats_driver_location
    trigger: state
    id: driver_location_change
    alias: When Driver Location Chnages
  - entity_id:
      - binary_sensor.brandon_uber_eats_active_order
    trigger: state
    id: active_order_change
    alias: When Uber Eats Active Order changes state or any attributes
conditions:
  - condition: state
    entity_id: binary_sensor.brandon_uber_eats_active_order
    state: "on"
    enabled: true
    alias: If There's An Active Uber Eats Other
actions:
  - choose:
      - conditions:
          - condition: trigger
            id: restaurant_name_change
          - condition: template
            value_template: >-
              {{ states('sensor.brandon_uber_eats_restaurant_name') != 'No
              Restaurant' }}
        sequence:
          - action: tts.speak
            metadata: {}
            data:
              cache: false
              message: >-
                Message from UberEats, New {{
                states('sensor.brandon_uber_eats_restaurant_name') }} order
                received for Brandon.
              media_player_entity_id: media_player.brandons_bedroom
            target:
              entity_id: tts.google_translate_en_com
        alias: If Restaurant Name Updates
      - conditions:
          - condition: trigger
            id: driver_name_change
          - condition: template
            value_template: >-
              {{ states('sensor.brandon_uber_eats_driver_name') != 'No Driver
              Assigned' }}
        sequence:
          - action: tts.speak
            metadata: {}
            data:
              cache: false
              message: >-
                {{ states('sensor.brandon_uber_eats_driver_name') }} has been
                assigned to your {{
                states('sensor.brandon_uber_eats_restaurant_name') }} order.
              media_player_entity_id: media_player.brandons_bedroom
            target:
              entity_id: tts.google_translate_en_com
        alias: If Driver Name Updates
      - conditions:
          - condition: trigger
            id: order_stage_change
          - condition: template
            value_template: >-
              {{ trigger.from_state.state != trigger.to_state.state and
              trigger.to_state.state != 'No Active Order' }}
        sequence:
          - action: tts.speak
            metadata: {}
            data:
              cache: false
              message: >-
                Message From Uber Eats: Your {{
                states('sensor.brandon_uber_eats_restaurant_name') }} order is
                now, {{ states('sensor.brandon_uber_eats_order_stage') }}
              media_player_entity_id: media_player.brandons_bedroom
            target:
              entity_id: tts.google_translate_en_com
        alias: If Order Stage Updates
      - conditions:
          - condition: trigger
            id: driver_eta_change
          - condition: template
            value_template: "{{ states('sensor.brandon_uber_eats_driver_eta') != 'unknown' }}"
        sequence:
          - action: tts.speak
            metadata: {}
            data:
              cache: false
              message: >-
                Your {{ states('sensor.brandon_uber_eats_restaurant_name') }}
                order is now espected to arrive at {{
                states('sensor.brandon_uber_eats_driver_eta') }} and no later
                than {{ states('sensor.brandon_uber_eats_latest_arrival') }}
              media_player_entity_id: media_player.brandons_bedroom
            target:
              entity_id: tts.google_translate_en_com
        alias: If Driver ETA Updates
      - conditions:
          - condition: trigger
            id:
              - driver_location_change
          - condition: template
            value_template: >-
              {{ states('sensor.brandon_uber_eats_driver_location') != 'No
              Active Order' }}
        sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
          - action: tts.speak
            metadata: {}
            data:
              cache: false
              media_player_entity_id: media_player.brandons_bedroom
              message: >-
                Message From UberEats. {{
                states('sensor.brandon_uber_eats_driver_name') }} was last seen
                near {{ states('sensor.brandon_uber_eats_driver_location') }}
                with your {{ states('sensor.brandon_uber_eats_restaurant_name')
                }} order, and heading to you!.
            target:
              entity_id: tts.google_translate_en_com
        alias: If Driver Location Updates
      - conditions:
          - condition: trigger
            id: active_order_change
          - condition: template
            value_template: "{{ trigger.to_state.state != 'off' }}"
        sequence:
          - service: tts.google_translate_speak
            data:
              entity_id: tts.google_translate_en_com
              media_player_entity_id: media_player.brandons_bedroom
              message: >-
                New Uber Eats order received for Brandon from {{ states('sensor.brandon_uber_eats_restaurant_name') }}.
        alias: If Active Order Changes
    default: []
mode: queued
max: 4
