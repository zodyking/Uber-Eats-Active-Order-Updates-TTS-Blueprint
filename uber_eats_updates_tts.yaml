blueprint:
  name: Uber Eats Active Order Updates TTS (fixed - no !input in templates)
  description: >-
    Announces Uber Eats order updates via TTS. Uses runtime variables so
    blueprint inputs are not used inside Jinja templates (avoids TemplateSyntaxError).
  domain: automation

  input:
    user_name:
      name: User Name
      selector:
        text:
    active_order_sensor:
      name: Active Order Binary Sensor
      selector:
        entity:
          domain: binary_sensor
    order_stage_sensor:
      name: Order Stage Sensor
      selector:
        entity:
          domain: sensor
    driver_name_sensor:
      name: Driver Name Sensor
      selector:
        entity:
          domain: sensor
    driver_eta_sensor:
      name: Driver ETA Sensor
      selector:
        entity:
          domain: sensor
    restaurant_name_sensor:
      name: Restaurant Name Sensor
      selector:
        entity:
          domain: sensor
    driver_location_sensor:
      name: Driver Location Sensor
      selector:
        entity:
          domain: sensor
    latest_arrival_sensor:
      name: Latest Arrival Sensor
      selector:
        entity:
          domain: sensor
    tts_player:
      name: TTS Media Player
      selector:
        entity:
          domain: media_player
    tts_engine:
      name: TTS Engine
      selector:
        entity:
          domain: tts

trigger:
  - entity_id: !input order_stage_sensor
    trigger: state
    id: order_stage_change
  - entity_id: !input driver_name_sensor
    trigger: state
    id: driver_name_change
  - entity_id: !input driver_eta_sensor
    trigger: state
    id: driver_eta_change
  - entity_id: !input restaurant_name_sensor
    trigger: state
    id: restaurant_name_change
  - entity_id: !input driver_location_sensor
    trigger: state
    id: driver_location_change

condition:
  - condition: state
    entity_id: !input active_order_sensor
    state: "on"

action:
  # --- Expose blueprint inputs as runtime variables (no !input inside templates) ---
  - variables:
      user_name: !input user_name
      order_stage_sensor: !input order_stage_sensor
      driver_name_sensor: !input driver_name_sensor
      driver_eta_sensor: !input driver_eta_sensor
      restaurant_name_sensor: !input restaurant_name_sensor
      driver_location_sensor: !input driver_location_sensor
      latest_arrival_sensor: !input latest_arrival_sensor
      tts_player: !input tts_player
      tts_engine: !input tts_engine

  - choose:
      - conditions:
          - condition: trigger
            id: restaurant_name_change
          - condition: template
            # template uses the runtime variable (string entity id)
            value_template: >-
              {{ states(restaurant_name_sensor) != 'No Restaurant' }}
        sequence:
          - service: tts.speak
            data:
              cache: false
              message: >-
                Message from UberEats. New {{ states(restaurant_name_sensor) }} order
                received for {{ user_name }}.
              media_player_entity_id: "{{ tts_player }}"
            target:
              entity_id: "{{ tts_engine }}"
        alias: If Restaurant Name Updates

      - conditions:
          - condition: trigger
            id: driver_name_change
          - condition: template
            value_template: >-
              {{ states(driver_name_sensor) != 'No Driver Assigned' }}
        sequence:
          - service: tts.speak
            data:
              cache: false
              message: >-
                {{ states(driver_name_sensor) }} has been assigned to your
                {{ states(restaurant_name_sensor) }} order.
              media_player_entity_id: "{{ tts_player }}"
            target:
              entity_id: "{{ tts_engine }}"
        alias: If Driver Name Updates

      - conditions:
          - condition: trigger
            id: order_stage_change
          - condition: template
            value_template: >-
              {{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state != 'No Active Order' }}
        sequence:
          - service: tts.speak
            data:
              cache: false
              message: >-
                Message from Uber Eats: Your {{ states(restaurant_name_sensor) }}
                order is now {{ states(order_stage_sensor) }}.
              media_player_entity_id: "{{ tts_player }}"
            target:
              entity_id: "{{ tts_engine }}"
        alias: If Order Stage Updates

      - conditions:
          - condition: trigger
            id: driver_eta_change
          - condition: template
            value_template: >-
              {{ states(driver_eta_sensor) not in ['unknown', 'none', '' ] }}
        sequence:
          - service: tts.speak
            data:
              cache: false
              message: >-
                Your {{ states(restaurant_name_sensor) }} order is now expected to
                arrive at {{ states(driver_eta_sensor) }} and no later than
                {{ states(latest_arrival_sensor) }}.
              media_player_entity_id: "{{ tts_player }}"
            target:
              entity_id: "{{ tts_engine }}"
        alias: If Driver ETA Updates

      - conditions:
          - condition: trigger
            id: driver_location_change
          - condition: template
            value_template: >-
              {{ states(driver_location_sensor) not in ['No Active Order', 'unknown', 'none', ''] }}
        sequence:
          - delay:
              seconds: 30
          - service: tts.speak
            data:
              cache: false
              message: >-
                Message from UberEats. {{ states(driver_name_sensor) }} was last seen
                near {{ states(driver_location_sensor) | split(',') | first | strip }}
                with your {{ states(restaurant_name_sensor) }} order, and is heading to you!
              media_player_entity_id: "{{ tts_player }}"
            target:
              entity_id: "{{ tts_engine }}"
        alias: If Driver Location Updates

    default: []

mode: queued
max: 4
